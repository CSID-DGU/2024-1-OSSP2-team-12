{"ast":null,"code":"import React,{useState}from\"react\";import{Link,useHistory}from\"react-router-dom\";import\"./Signup.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const history=useHistory();const[signupInfo,setSignupInfo]=useState({username:\"\",id:\"\",password:\"\",confirmPassword:\"\",email:\"\"});const handleChange=e=>{const{name,value}=e.target;setSignupInfo({...signupInfo,[name]:value});if(name===\"confirmPassword\"&&signupInfo.password){const confirmPasswordElement=document.getElementById(\"confirmPassword\");if(value===signupInfo.password){confirmPasswordElement.classList.remove(\"error\");confirmPasswordElement.classList.add(\"success\");}else{confirmPasswordElement.classList.remove(\"success\");confirmPasswordElement.classList.add(\"error\");}}};const handleSubmit=async e=>{e.preventDefault();if(signupInfo.password!==signupInfo.confirmPassword){alert(\"Passwords do not match\");}else{try{const response=await fetch(\"http://34.64.241.205:8080/members/save\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",'Access-Control-Allow-Credentials':true},body:JSON.stringify(signupInfo)});const responseText=await response.text();// 응답을 텍스트로 받기\n// JSON 파싱을 시도하고, 실패하면 그대로 문자열로 처리\nlet data;try{data=JSON.parse(responseText);}catch(error){data=responseText;}console.log(data);console.log(response);if(response.ok){if(data===\"Member added success\"){alert(\"회원가입 완료\");history.push(\"/\");}else if(data===\"This Email already Exist\"){alert(\"이미 회원입니다.\");history.push(\"/login\");}else{alert(data);}}else{alert(\"회원가입 실패\");}}catch(error){console.error(\"오류 발생:\",error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container_signup\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title_signup\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:signupInfo.username,onChange:handleChange,className:\"input-field_signup\",placeholder:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:signupInfo.id,onChange:handleChange,className:\"input-field_signup\",placeholder:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:signupInfo.password,onChange:handleChange,className:\"input-field_signup\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",id:\"confirmPassword\",value:signupInfo.confirmPassword,onChange:handleChange,className:\"input-field_signup\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:signupInfo.email,onChange:handleChange,className:\"input-field_signup\",placeholder:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signup_button\",children:\"\\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"p\",{className:\"login_link\",children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"\\uC774\\uBBF8 \\uD68C\\uC6D0\\uC785\\uB2C8\\uB2E4\"})})]})]});};export default Signup;","map":{"version":3,"names":["React","useState","Link","useHistory","jsx","_jsx","jsxs","_jsxs","Signup","history","signupInfo","setSignupInfo","username","id","password","confirmPassword","email","handleChange","e","name","value","target","confirmPasswordElement","document","getElementById","classList","remove","add","handleSubmit","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","responseText","text","data","parse","error","console","log","ok","push","className","children","onSubmit","type","onChange","placeholder","to"],"sources":["/Users/parkgyouyoung/IdeaProjects/ScanSavvy/src/main/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./Signup.css\";\n\nconst Signup = () => {\n    const history = useHistory();\n    const [signupInfo, setSignupInfo] = useState({\n        username: \"\",\n        id: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        email: \"\",\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setSignupInfo({\n            ...signupInfo,\n            [name]: value,\n        });\n\n        if (name === \"confirmPassword\" && signupInfo.password) {\n            const confirmPasswordElement = document.getElementById(\"confirmPassword\");\n            if (value === signupInfo.password) {\n                confirmPasswordElement.classList.remove(\"error\");\n                confirmPasswordElement.classList.add(\"success\");\n            } else {\n                confirmPasswordElement.classList.remove(\"success\");\n                confirmPasswordElement.classList.add(\"error\");\n            }\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (signupInfo.password !== signupInfo.confirmPassword) {\n            alert(\"Passwords do not match\");\n        } else {\n            try {\n                const response = await fetch(\"http://34.64.241.205:8080/members/save\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        'Access-Control-Allow-Credentials': true,\n                    },\n                    body: JSON.stringify(signupInfo),\n                });\n\n                const responseText = await response.text();  // 응답을 텍스트로 받기\n\n                // JSON 파싱을 시도하고, 실패하면 그대로 문자열로 처리\n                let data;\n                try {\n                    data = JSON.parse(responseText);\n                } catch (error) {\n                    data = responseText;\n                }\n                console.log(data)\n                console.log(response)\n                if (response.ok) {\n                    if (data === \"Member added success\") {\n                        alert(\"회원가입 완료\");\n                        history.push(\"/\");\n                    } else if (data === \"This Email already Exist\") {\n                        alert(\"이미 회원입니다.\");\n                        history.push(\"/login\");\n                    } else {\n                        alert(data);\n                    }\n                } else {\n                    alert(\"회원가입 실패\");\n                }\n            } catch (error) {\n                console.error(\"오류 발생:\", error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"container_signup\">\n            <div className=\"title_signup\">회원가입</div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={signupInfo.username}\n                    onChange={handleChange}\n                    className=\"input-field_signup\"\n                    placeholder=\"이름\"\n                />\n                <br />\n                <input\n                    type=\"text\"\n                    name=\"id\"\n                    value={signupInfo.id}\n                    onChange={handleChange}\n                    className=\"input-field_signup\"\n                    placeholder=\"아이디\"\n                />\n                <br />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={signupInfo.password}\n                    onChange={handleChange}\n                    className=\"input-field_signup\"\n                    placeholder=\"비밀번호\"\n                />\n                <br />\n                <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    id=\"confirmPassword\"\n                    value={signupInfo.confirmPassword}\n                    onChange={handleChange}\n                    className=\"input-field_signup\"\n                    placeholder=\"비밀번호 확인\"\n                />\n                <br />\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={signupInfo.email}\n                    onChange={handleChange}\n                    className=\"input-field_signup\"\n                    placeholder=\"이메일\"\n                />\n                <br />\n                <button type=\"submit\" className=\"signup_button\">\n                    확인\n                </button>\n                <p className=\"login_link\">\n                    <Link to=\"/login\">이미 회원입니다</Link>\n                </p>\n            </form>\n        </div>\n    );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}