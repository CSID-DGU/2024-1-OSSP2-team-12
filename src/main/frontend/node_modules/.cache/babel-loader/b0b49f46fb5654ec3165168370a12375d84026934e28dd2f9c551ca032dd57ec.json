{"ast":null,"code":"var _jsxFileName = \"/Users/parkgyouyoung/IdeaProjects/ScanSavvy/src/main/frontend/src/components/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ImageUpload.css\";\nimport imageicon from \"../assets/imageicon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [extractedText, setExtractedText] = useState(\"\");\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      let img = e.target.files[0];\n      setImage(img);\n      setPreviewUrl(URL.createObjectURL(img));\n      processImage(img);\n    }\n  };\n\n  // OCR 처리 함수\n  const processImage = async imgFile => {\n    const formData = new FormData();\n    formData.append('image', imgFile);\n    try {\n      const response = await fetch('/api/ocr', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('OCR API request failed');\n      }\n      const result = await response.json();\n      setExtractedText(result);\n    } catch (error) {\n      console.error('Error processing image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      onClick: () => document.getElementById(\"fileInput\").click(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadInfo\",\n        children: \"\\uAC74\\uAC15\\uAC80\\uC9C4\\uD45C \\uC0AC\\uC9C4\\uC744 \\uB4F1\\uB85D\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageicon,\n        alt: \"\\uC774\\uBBF8\\uC9C0\\uC544\\uC774\\uCF58\",\n        className: \"imageicon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        onChange: handleImageChange,\n        className: \"hidden\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl,\n        alt: \"Image Preview\",\n        className: \"image-preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extracted-text\",\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUpload, \"9aEx4k2r5/XWvsea/BoMNPvPi9Y=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","imageicon","jsxDEV","_jsxDEV","ImageUpload","_s","image","setImage","previewUrl","setPreviewUrl","extractedText","setExtractedText","handleImageChange","e","target","files","img","URL","createObjectURL","processImage","imgFile","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","error","console","className","children","onClick","document","getElementById","click","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","id","type","onChange","accept","_c","$RefreshReg$"],"sources":["/Users/parkgyouyoung/IdeaProjects/ScanSavvy/src/main/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ImageUpload.css\";\nimport imageicon from \"../assets/imageicon.png\";\n\nconst ImageUpload = () => {\n    const [image, setImage] = useState(null);\n    const [previewUrl, setPreviewUrl] = useState(\"\");\n    const [extractedText, setExtractedText] = useState(\"\");\n\n    const handleImageChange = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            let img = e.target.files[0];\n            setImage(img);\n            setPreviewUrl(URL.createObjectURL(img));\n            processImage(img);\n        }\n    };\n\n    // OCR 처리 함수\n    const processImage = async (imgFile) => {\n        const formData = new FormData();\n        formData.append('image', imgFile);\n\n        try {\n            const response = await fetch('/api/ocr', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (!response.ok) {\n                throw new Error('OCR API request failed');\n            }\n\n            const result = await response.json();\n            setExtractedText(result);\n        } catch (error) {\n            console.error('Error processing image:', error);\n        }\n    };\n\n    return (\n        <div className=\"container_upload\">\n            <div\n                className=\"upload-container\"\n                onClick={() => document.getElementById(\"fileInput\").click()}\n            >\n                <div className=\"uploadInfo\">건강검진표 사진을 등록하세요</div>\n                <br/>\n                <img src={imageicon} alt=\"이미지아이콘\" className=\"imageicon\"/>{\" \"}\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    onChange={handleImageChange}\n                    className=\"hidden\"\n                    accept=\"image/*\"\n                />\n            </div>\n            {previewUrl && (\n                <div>\n                    <img src={previewUrl} alt=\"Image Preview\" className=\"image-preview\"/>\n                    <div className=\"extracted-text\">{extractedText}</div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ImageUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}